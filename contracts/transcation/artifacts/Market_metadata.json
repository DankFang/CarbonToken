{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "person",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "enterprise",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "CtAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "cancelOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "purchaseLimit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "unitPrice",
						"type": "uint256"
					}
				],
				"name": "createOrder",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllOrders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "orderId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "purchaseLimit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "unitPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "remainingQuantity",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isCompleted",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "merchant",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "ETHremain",
								"type": "uint256"
							}
						],
						"internalType": "struct Market.Order[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "getOrder",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "orderId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "purchaseLimit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "unitPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "remainingQuantity",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isCompleted",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "merchant",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "ETHremain",
								"type": "uint256"
							}
						],
						"internalType": "struct Market.Order",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					}
				],
				"name": "placeOrder",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"CarbonToken/transcation/market.sol": "Market"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
			"license": "MIT",
			"urls": [
				"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
				"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"CarbonToken/CT.sol": {
			"keccak256": "0x38bf7db473d9802e6f60ea7cac55efd6f212223c38874fa5cd97c381f545834e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b567f98a8b9af4bb44b82c7543819d8cfbc15fac60c2714748f31a5e6e162fb0",
				"dweb:/ipfs/QmP7NfGkRxapsuhG5a5srjFsyaWmMNxoSnMbs9Z32zPFyW"
			]
		},
		"CarbonToken/dao/IpeInterface.sol": {
			"keccak256": "0x31a0bc1ceaba9f1e0de86c2d890aed6422af750002e95ff51d60b9af72bea8af",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbe24b8fee23772c97aac39360bf9740b66ff6fecae18c17fd739b5354f29152",
				"dweb:/ipfs/QmdFsU7iAbgobGacg7SZJLqbq3UyPPNP7UprxjrjLL6avq"
			]
		},
		"CarbonToken/transcation/market.sol": {
			"keccak256": "0x9a84407a43e6d43e761346f86ae400110d494bbedca55779f27f3aee3f985c21",
			"license": "MIT",
			"urls": [
				"bzz-raw://c259f7d2e2ec2f0a518c5c0c7da81438015bb0effa2014cc1122dd0d7571880c",
				"dweb:/ipfs/QmdZUoC8hVy2JfCfMF7qEqAE5DXudLAULr5w6V7jaNrWjp"
			]
		}
	},
	"version": 1
}